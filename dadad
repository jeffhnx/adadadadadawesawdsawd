-- Variables
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local camera = game.Workspace.CurrentCamera
local espEnabled = false -- ESP starts off
local highlightObjects = {}
local targetPlayerToAim = nil -- The player you want to aim at
local aimbotEnabled = false -- Aimbot tracking status

-- Function to create a rainbow effect
local function getRainbowColor(t)
    local r = math.sin(t) * 0.5 + 0.5
    local g = math.sin(t + 2 * math.pi / 3) * 0.5 + 0.5
    local b = math.sin(t + 4 * math.pi / 3) * 0.5 + 0.5
    return Color3.new(r, g, b)
end

-- Function to create or update the highlight object (ESP)
local function highlightPlayer(targetPlayer)
    if not highlightObjects[targetPlayer.Name] then
        local highlight = Instance.new("Highlight")
        highlight.Adornee = targetPlayer.Character
        highlight.FillTransparency = 0.5 -- Semi-transparent glow
        highlight.OutlineTransparency = 0 -- Visible outline
        highlightObjects[targetPlayer.Name] = highlight
        
        -- Set highlight color based on team
        if targetPlayer.Team == player.Team then
            highlight.FillColor = Color3.new(0, 1, 0) -- Green for teammates
        else
            highlight.FillColor = Color3.new(1, 0, 0) -- Red for enemies
        end

        highlight.Parent = targetPlayer.Character
    end
end

-- Function to update ESP colors (rainbow glow effect)
local function updateESPColors()
    local t = tick()
    for _, highlight in pairs(highlightObjects) do
        if highlight and highlight.Parent then
            -- Update colors based on team
            if highlight.Adornee and highlight.Adornee:IsA("Model") then
                local targetPlayer = game.Players:GetPlayerFromCharacter(highlight.Adornee)
                if targetPlayer then
                    if targetPlayer.Team == player.Team then
                        highlight.FillColor = Color3.new(0, 1, 0) -- Green for teammates
                    else
                        highlight.FillColor = Color3.new(1, 0, 0) -- Red for enemies
                    end
                end
            end
        end
    end
end

-- Function to aim at a specific player's head with a height adjustment
local function aimAtPlayerHead(targetPlayer)
    if targetPlayer.Character and targetPlayer.Character:FindFirstChild("Head") then
        local targetHead = targetPlayer.Character.Head
        local adjustedAimPosition = targetHead.Position + Vector3.new(0, 0.5, 0) -- Adjust height by 0.5 units

        -- Raycast to check if there's a direct line of sight (no walls in the way)
        local origin = camera.CFrame.Position
        local direction = (adjustedAimPosition - origin).unit * (adjustedAimPosition - origin).magnitude
        local raycastParams = RaycastParams.new()
        raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
        raycastParams.FilterDescendantsInstances = {player.Character} -- Ignore local player's character

        local result = game.Workspace:Raycast(origin, direction, raycastParams)
        if result and result.Instance:IsDescendantOf(targetPlayer.Character) then
            camera.CFrame = CFrame.new(camera.CFrame.Position, adjustedAimPosition) -- Aim at the adjusted target position
        end
    end
end

-- Toggle ESP on/off with "E"
game:GetService("UserInputService").InputBegan:Connect(function(input, gameProcessedEvent)
    if not gameProcessedEvent then
        if input.KeyCode == Enum.KeyCode.E then
            espEnabled = not espEnabled
            if espEnabled then
                -- Highlight all players for ESP
                local players = game.Players:GetPlayers()
                for _, targetPlayer in pairs(players) do
                    if targetPlayer ~= player and targetPlayer.Character then
                        highlightPlayer(targetPlayer)
                    end
                end
            else
                -- Clear highlights
                for _, highlight in pairs(highlightObjects) do
                    if highlight then
                        highlight:Destroy()
                    end
                end
                highlightObjects = {}
            end
        end
    end
end)

-- Detect holding right-click for aimbot (track player head)
game:GetService("UserInputService").InputBegan:Connect(function(input, gameProcessedEvent)
    if not gameProcessedEvent then
        if input.UserInputType == Enum.UserInputType.MouseButton2 then
            aimbotEnabled = true -- Enable aimbot (tracking starts)
        end
    end
end)

game:GetService("UserInputService").InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        aimbotEnabled = false -- Disable aimbot (tracking stops)
        targetPlayerToAim = nil -- Clear target
    end
end)

-- Update ESP and aimbot every frame
game:GetService("RunService").RenderStepped:Connect(function()
    -- Update ESP colors
    if espEnabled then
        updateESPColors()
    end

    -- Aim at players on the opposing team
    if aimbotEnabled then
        local players = game.Players:GetPlayers()
        for _, target in ipairs(players) do
            if target ~= player and target.Character and target.Character:FindFirstChild("Head") then
                -- Check if the target is on the opposing team
                if target.Team ~= player.Team then
                    aimAtPlayerHead(target) -- Aim at the target's head
                end
            end
        end
    end
end)
